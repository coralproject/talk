name: Build and Test

on:
  workflow_dispatch:
  push:

env:
  IMAGE_REPOSITORY: 'gcr.io/the-coral-project/coral'


jobs:
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-22.04
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.REPO_PATCHED_DEPLOY_KEY }}
      -
        name: Login to GCR
        uses: docker/login-action@v2
        with:
          registry: gcr.io
          username: _json_key
          password: ${{ secrets.GCR_JSON_KEY }}
      -
        name: Define SHORT_SHA with commit short sha
        run: echo "SHORT_SHA=`echo ${GITHUB_SHA} | cut -c1-8`" >> $GITHUB_ENV
      -
        name: Setup Node14.x
        uses: actions/setup-node@v3
        with:
          node-version: '14.x'
      -
        name: Install npm 8
        run: npm i -g npm@8.0.0 --registry=https://registry.npmjs.org
      -
        name: npm Lockfile Version
        uses: mansona/npm-lockfile-version@v1
        with:
          version: 2
      -
        name: Cache Dependencies
        id: cache
        uses: actions/cache@v3
        with:
          path: ./node_modules
          key: modules-${{ hashFiles('package-lock.json') }}
          restore-keys: npm-
      -
        name: npm ci
        run: npm ci
      -
        name: Generate schemas and types
        run: npm run generate
      -
        name: Lint Source Code
        run: npm run lint
      -
        name: Lint Markdown
        run: |
          npm run doctoc
          git diff --exit-code
      -
        name: Lint Versions
        run: npx @coralproject/package-version-lint
      -
        name: Run Unit Tests
        run: npm run test -- --ci --runInBand --reporters=default --reporters=jest-junit
      -
        name: Build
        run: npm run build
      -
        name: Verify Bundle Size
        run: ./node_modules/.bin/bundlesize --enable-github-checks
# Build tag push the image after a merge to develop
      -
        name: Build, Tag, Push
        uses: docker/build-push-action@v3
        if: github.ref == 'refs/heads/develop'
        with:
          push: true
          tags: ${{ env.IMAGE_REPOSITORY }}:develop-latest
          build-args: |
              REVISION_HASH=${GITHUB_SHA}
# Build tag push the release candidate image when the branch name begins with release-
      -
        name: Build, Tag, Push RC
        uses: docker/build-push-action@v3
        if: startsWith( github.ref, 'refs/heads/release-')
        with:
          push: true
          tags: ${{ env.IMAGE_REPOSITORY }}:${{ github.ref_name }}-${{ env.SHORT_SHA }}
          build-args: |
              REVISION_HASH=${GITHUB_SHA}
