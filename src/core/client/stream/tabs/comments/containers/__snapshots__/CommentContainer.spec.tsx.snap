// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`hide reply button 1`] = `
<withPropsOnChange(HorizontalGutter)>
  <IndentedComment
    blur={false}
    body="Woof"
    createdAt="1995-12-17T03:24:00.000Z"
    footer={
      <React.Fragment>
        <ButtonsBar>
          <withContext(withLocalStateContainer(PermalinkContainer))
            commentID="comment-id"
          />
          <withContext(createMutationContainer(withContext(createMutationContainer(withContext(createMutationContainer(Relay(ReactionButtonContainer)))))))
            comment={
              Object {
                "author": Object {
                  "id": "author-id",
                  "username": "Marvin",
                },
                "body": "Woof",
                "createdAt": "1995-12-17T03:24:00.000Z",
                "editing": Object {
                  "editableUntil": "1995-12-17T03:24:30.000Z",
                  "edited": false,
                },
                "id": "comment-id",
                "pending": false,
              }
            }
            me={null}
            settings={
              Object {
                "reaction": Object {
                  "icon": "thumb_up_alt",
                  "label": "Respect",
                },
              }
            }
          />
        </ButtonsBar>
      </React.Fragment>
    }
    id="comment-comment-id"
    indentLevel={1}
    showEditedMarker={false}
    username="Marvin"
  />
</withPropsOnChange(HorizontalGutter)>
`;

exports[`renders body only 1`] = `
<withPropsOnChange(HorizontalGutter)>
  <IndentedComment
    blur={false}
    body="Woof"
    createdAt="1995-12-17T03:24:00.000Z"
    footer={
      <React.Fragment>
        <ButtonsBar>
          <ReplyButton
            active={false}
            id="comments-commentContainer-replyButton-comment-id"
            onClick={[Function]}
          />
          <withContext(withLocalStateContainer(PermalinkContainer))
            commentID="comment-id"
          />
          <withContext(createMutationContainer(withContext(createMutationContainer(withContext(createMutationContainer(Relay(ReactionButtonContainer)))))))
            comment={
              Object {
                "author": Object {
                  "id": "author-id",
                  "username": null,
                },
                "body": "Woof",
                "createdAt": "1995-12-17T03:24:00.000Z",
                "editing": Object {
                  "editableUntil": "1995-12-17T03:24:30.000Z",
                  "edited": false,
                },
                "id": "comment-id",
                "pending": false,
              }
            }
            me={null}
            settings={
              Object {
                "reaction": Object {
                  "icon": "thumb_up_alt",
                  "label": "Respect",
                },
              }
            }
          />
        </ButtonsBar>
      </React.Fragment>
    }
    id="comment-comment-id"
    indentLevel={1}
    showEditedMarker={false}
    username={null}
  />
</withPropsOnChange(HorizontalGutter)>
`;

exports[`renders username and body 1`] = `
<withPropsOnChange(HorizontalGutter)>
  <IndentedComment
    blur={false}
    body="Woof"
    createdAt="1995-12-17T03:24:00.000Z"
    footer={
      <React.Fragment>
        <ButtonsBar>
          <ReplyButton
            active={false}
            id="comments-commentContainer-replyButton-comment-id"
            onClick={[Function]}
          />
          <withContext(withLocalStateContainer(PermalinkContainer))
            commentID="comment-id"
          />
          <withContext(createMutationContainer(withContext(createMutationContainer(withContext(createMutationContainer(Relay(ReactionButtonContainer)))))))
            comment={
              Object {
                "author": Object {
                  "id": "author-id",
                  "username": "Marvin",
                },
                "body": "Woof",
                "createdAt": "1995-12-17T03:24:00.000Z",
                "editing": Object {
                  "editableUntil": "1995-12-17T03:24:30.000Z",
                  "edited": false,
                },
                "id": "comment-id",
                "pending": false,
              }
            }
            me={null}
            settings={
              Object {
                "reaction": Object {
                  "icon": "thumb_up_alt",
                  "label": "Respect",
                },
              }
            }
          />
        </ButtonsBar>
      </React.Fragment>
    }
    id="comment-comment-id"
    indentLevel={1}
    showEditedMarker={false}
    username="Marvin"
  />
</withPropsOnChange(HorizontalGutter)>
`;

exports[`shows conversation link 1`] = `
<withPropsOnChange(HorizontalGutter)>
  <IndentedComment
    blur={false}
    body="Woof"
    createdAt="1995-12-17T03:24:00.000Z"
    footer={
      <React.Fragment>
        <ButtonsBar>
          <ReplyButton
            active={false}
            id="comments-commentContainer-replyButton-comment-id"
            onClick={[Function]}
          />
          <withContext(withLocalStateContainer(PermalinkContainer))
            commentID="comment-id"
          />
          <withContext(createMutationContainer(withContext(createMutationContainer(withContext(createMutationContainer(Relay(ReactionButtonContainer)))))))
            comment={
              Object {
                "author": Object {
                  "id": "author-id",
                  "username": "Marvin",
                },
                "body": "Woof",
                "createdAt": "1995-12-17T03:24:00.000Z",
                "editing": Object {
                  "editableUntil": "1995-12-17T03:24:30.000Z",
                  "edited": false,
                },
                "id": "comment-id",
                "pending": false,
              }
            }
            me={null}
            settings={
              Object {
                "reaction": Object {
                  "icon": "thumb_up",
                  "label": "Respect",
                  "labelActive": "Respected",
                },
              }
            }
          />
        </ButtonsBar>
        <ShowConversationLink
          href="http://localhost/asset?commentID=comment-id"
          id="comments-commentContainer-showConversation-comment-id"
          onClick={[Function]}
        />
      </React.Fragment>
    }
    id="comment-comment-id"
    indentLevel={1}
    showEditedMarker={false}
    username="Marvin"
  />
</withPropsOnChange(HorizontalGutter)>
`;
