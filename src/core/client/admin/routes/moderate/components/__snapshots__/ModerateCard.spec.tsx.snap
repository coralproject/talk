// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders accepted correctly 1`] = `
<withPropsOnChange(Card)
  className="ModerateCard-root"
  data-testid="moderate-comment-comment-id"
>
  <ForwardRef(forwardRef)>
    <div
      className="ModerateCard-mainContainer"
    >
      <div
        className="ModerateCard-topBar"
      >
        <div>
          <Username
            className="ModerateCard-username"
          >
            Theon
          </Username>
          <Timestamp>
            2018-11-29T16:01:51.897Z
          </Timestamp>
        </div>
      </div>
      <CommentContent
        bannedWords={
          Array [
            "fuck",
          ]
        }
        className="ModerateCard-content"
        suspectWords={
          Array [
            "idiot",
          ]
        }
      >
        content
      </CommentContent>
      <div
        className="ModerateCard-footer"
      >
        <ForwardRef(forwardRef)>
          <div>
            <Localized
              id="moderate-comment-viewContext"
            >
              <withPropsOnChange(TextLinkProps)
                className="ModerateCard-link"
                external={true}
                href="http://localhost/comment"
                target="_blank"
              >
                View Context
              </withPropsOnChange(TextLinkProps)>
            </Localized>
          </div>
          <Relay(MarkersContainer)
            comment={Object {}}
          />
        </ForwardRef(forwardRef)>
      </div>
    </div>
    <div
      className="ModerateCard-separator"
    />
    <ForwardRef(forwardRef)
      alignItems="center"
      className="ModerateCard-aside ModerateCard-asideWithoutReplyTo"
      direction="column"
      itemGutter={true}
    >
      <Localized
        id="moderate-comment-decision"
      >
        <div
          className="ModerateCard-decision"
        >
          DECISION
        </div>
      </Localized>
      <ForwardRef(forwardRef)
        itemGutter={true}
      >
        <RejectButton
          invert={false}
          onClick={[Function]}
        />
        <AcceptButton
          disabled={true}
          invert={true}
          onClick={[Function]}
        />
      </ForwardRef(forwardRef)>
    </ForwardRef(forwardRef)>
  </ForwardRef(forwardRef)>
</withPropsOnChange(Card)>
`;

exports[`renders correctly 1`] = `
<withPropsOnChange(Card)
  className="ModerateCard-root"
  data-testid="moderate-comment-comment-id"
>
  <ForwardRef(forwardRef)>
    <div
      className="ModerateCard-mainContainer"
    >
      <div
        className="ModerateCard-topBar"
      >
        <div>
          <Username
            className="ModerateCard-username"
          >
            Theon
          </Username>
          <Timestamp>
            2018-11-29T16:01:51.897Z
          </Timestamp>
        </div>
      </div>
      <CommentContent
        bannedWords={
          Array [
            "fuck",
          ]
        }
        className="ModerateCard-content"
        suspectWords={
          Array [
            "idiot",
          ]
        }
      >
        content
      </CommentContent>
      <div
        className="ModerateCard-footer"
      >
        <ForwardRef(forwardRef)>
          <div>
            <Localized
              id="moderate-comment-viewContext"
            >
              <withPropsOnChange(TextLinkProps)
                className="ModerateCard-link"
                external={true}
                href="http://localhost/comment"
                target="_blank"
              >
                View Context
              </withPropsOnChange(TextLinkProps)>
            </Localized>
          </div>
          <Relay(MarkersContainer)
            comment={Object {}}
          />
        </ForwardRef(forwardRef)>
      </div>
    </div>
    <div
      className="ModerateCard-separator"
    />
    <ForwardRef(forwardRef)
      alignItems="center"
      className="ModerateCard-aside ModerateCard-asideWithoutReplyTo"
      direction="column"
      itemGutter={true}
    >
      <Localized
        id="moderate-comment-decision"
      >
        <div
          className="ModerateCard-decision"
        >
          DECISION
        </div>
      </Localized>
      <ForwardRef(forwardRef)
        itemGutter={true}
      >
        <RejectButton
          invert={false}
          onClick={[Function]}
        />
        <AcceptButton
          invert={false}
          onClick={[Function]}
        />
      </ForwardRef(forwardRef)>
    </ForwardRef(forwardRef)>
  </ForwardRef(forwardRef)>
</withPropsOnChange(Card)>
`;

exports[`renders dangling correctly 1`] = `
<withPropsOnChange(Card)
  className="ModerateCard-root ModerateCard-dangling"
  data-testid="moderate-comment-comment-id"
>
  <ForwardRef(forwardRef)>
    <div
      className="ModerateCard-mainContainer"
    >
      <div
        className="ModerateCard-topBar"
      >
        <div>
          <Username
            className="ModerateCard-username"
          >
            Theon
          </Username>
          <Timestamp>
            2018-11-29T16:01:51.897Z
          </Timestamp>
        </div>
      </div>
      <CommentContent
        bannedWords={
          Array [
            "fuck",
          ]
        }
        className="ModerateCard-content"
        suspectWords={
          Array [
            "idiot",
          ]
        }
      >
        content
      </CommentContent>
      <div
        className="ModerateCard-footer"
      >
        <ForwardRef(forwardRef)>
          <div>
            <Localized
              id="moderate-comment-viewContext"
            >
              <withPropsOnChange(TextLinkProps)
                className="ModerateCard-link"
                external={true}
                href="http://localhost/comment"
                target="_blank"
              >
                View Context
              </withPropsOnChange(TextLinkProps)>
            </Localized>
          </div>
          <Relay(MarkersContainer)
            comment={Object {}}
          />
        </ForwardRef(forwardRef)>
      </div>
    </div>
    <div
      className="ModerateCard-separator"
    />
    <ForwardRef(forwardRef)
      alignItems="center"
      className="ModerateCard-aside ModerateCard-asideWithoutReplyTo"
      direction="column"
      itemGutter={true}
    >
      <Localized
        id="moderate-comment-decision"
      >
        <div
          className="ModerateCard-decision"
        >
          DECISION
        </div>
      </Localized>
      <ForwardRef(forwardRef)
        itemGutter={true}
      >
        <RejectButton
          disabled={true}
          invert={false}
          onClick={[Function]}
        />
        <AcceptButton
          disabled={true}
          invert={false}
          onClick={[Function]}
        />
      </ForwardRef(forwardRef)>
    </ForwardRef(forwardRef)>
  </ForwardRef(forwardRef)>
</withPropsOnChange(Card)>
`;

exports[`renders rejected correctly 1`] = `
<withPropsOnChange(Card)
  className="ModerateCard-root"
  data-testid="moderate-comment-comment-id"
>
  <ForwardRef(forwardRef)>
    <div
      className="ModerateCard-mainContainer"
    >
      <div
        className="ModerateCard-topBar"
      >
        <div>
          <Username
            className="ModerateCard-username"
          >
            Theon
          </Username>
          <Timestamp>
            2018-11-29T16:01:51.897Z
          </Timestamp>
        </div>
      </div>
      <CommentContent
        bannedWords={
          Array [
            "fuck",
          ]
        }
        className="ModerateCard-content"
        suspectWords={
          Array [
            "idiot",
          ]
        }
      >
        content
      </CommentContent>
      <div
        className="ModerateCard-footer"
      >
        <ForwardRef(forwardRef)>
          <div>
            <Localized
              id="moderate-comment-viewContext"
            >
              <withPropsOnChange(TextLinkProps)
                className="ModerateCard-link"
                external={true}
                href="http://localhost/comment"
                target="_blank"
              >
                View Context
              </withPropsOnChange(TextLinkProps)>
            </Localized>
          </div>
          <Relay(MarkersContainer)
            comment={Object {}}
          />
        </ForwardRef(forwardRef)>
      </div>
    </div>
    <div
      className="ModerateCard-separator"
    />
    <ForwardRef(forwardRef)
      alignItems="center"
      className="ModerateCard-aside ModerateCard-asideWithoutReplyTo"
      direction="column"
      itemGutter={true}
    >
      <Localized
        id="moderate-comment-decision"
      >
        <div
          className="ModerateCard-decision"
        >
          DECISION
        </div>
      </Localized>
      <ForwardRef(forwardRef)
        itemGutter={true}
      >
        <RejectButton
          disabled={true}
          invert={true}
          onClick={[Function]}
        />
        <AcceptButton
          invert={false}
          onClick={[Function]}
        />
      </ForwardRef(forwardRef)>
    </ForwardRef(forwardRef)>
  </ForwardRef(forwardRef)>
</withPropsOnChange(Card)>
`;

exports[`renders reply correctly 1`] = `
<withPropsOnChange(Card)
  className="ModerateCard-root"
  data-testid="moderate-comment-comment-id"
>
  <ForwardRef(forwardRef)>
    <div
      className="ModerateCard-mainContainer"
    >
      <div
        className="ModerateCard-topBar"
      >
        <div>
          <Username
            className="ModerateCard-username"
          >
            Theon
          </Username>
          <Timestamp>
            2018-11-29T16:01:51.897Z
          </Timestamp>
        </div>
        <div>
          <InReplyTo>
            Julian
          </InReplyTo>
        </div>
      </div>
      <CommentContent
        bannedWords={
          Array [
            "fuck",
          ]
        }
        className="ModerateCard-content"
        suspectWords={
          Array [
            "idiot",
          ]
        }
      >
        content
      </CommentContent>
      <div
        className="ModerateCard-footer"
      >
        <ForwardRef(forwardRef)>
          <div>
            <Localized
              id="moderate-comment-viewContext"
            >
              <withPropsOnChange(TextLinkProps)
                className="ModerateCard-link"
                external={true}
                href="http://localhost/comment"
                target="_blank"
              >
                View Context
              </withPropsOnChange(TextLinkProps)>
            </Localized>
          </div>
          <Relay(MarkersContainer)
            comment={Object {}}
          />
        </ForwardRef(forwardRef)>
      </div>
    </div>
    <div
      className="ModerateCard-separator"
    />
    <ForwardRef(forwardRef)
      alignItems="center"
      className="ModerateCard-aside"
      direction="column"
      itemGutter={true}
    >
      <Localized
        id="moderate-comment-decision"
      >
        <div
          className="ModerateCard-decision"
        >
          DECISION
        </div>
      </Localized>
      <ForwardRef(forwardRef)
        itemGutter={true}
      >
        <RejectButton
          invert={false}
          onClick={[Function]}
        />
        <AcceptButton
          invert={false}
          onClick={[Function]}
        />
      </ForwardRef(forwardRef)>
    </ForwardRef(forwardRef)>
  </ForwardRef(forwardRef)>
</withPropsOnChange(Card)>
`;

exports[`renders story info 1`] = `
<withPropsOnChange(Card)
  className="ModerateCard-root"
  data-testid="moderate-comment-comment-id"
>
  <ForwardRef(forwardRef)>
    <div
      className="ModerateCard-mainContainer"
    >
      <div
        className="ModerateCard-topBar"
      >
        <div>
          <Username
            className="ModerateCard-username"
          >
            Theon
          </Username>
          <Timestamp>
            2018-11-29T16:01:51.897Z
          </Timestamp>
        </div>
      </div>
      <CommentContent
        bannedWords={
          Array [
            "fuck",
          ]
        }
        className="ModerateCard-content"
        suspectWords={
          Array [
            "idiot",
          ]
        }
      >
        content
      </CommentContent>
      <div
        className="ModerateCard-footer"
      >
        <ForwardRef(forwardRef)>
          <div>
            <Localized
              id="moderate-comment-viewContext"
            >
              <withPropsOnChange(TextLinkProps)
                className="ModerateCard-link"
                external={true}
                href="http://localhost/comment"
                target="_blank"
              >
                View Context
              </withPropsOnChange(TextLinkProps)>
            </Localized>
          </div>
          <div>
            <Localized
              id="moderate-comment-story"
            >
              <span
                className="ModerateCard-story"
              >
                Story
              </span>
            </Localized>
            : 
            <span
              className="ModerateCard-storyTitle"
            >
              Cancer cured!
            </span>
             
            <Localized
              id="moderate-comment-moderateStory"
            >
              <withPropsOnChange(TextLinkProps)
                className="ModerateCard-link"
                href="/story"
                onClick={[Function]}
                target="_blank"
              >
                Moderate Story
              </withPropsOnChange(TextLinkProps)>
            </Localized>
          </div>
          <Relay(MarkersContainer)
            comment={Object {}}
          />
        </ForwardRef(forwardRef)>
      </div>
    </div>
    <div
      className="ModerateCard-separator"
    />
    <ForwardRef(forwardRef)
      alignItems="center"
      className="ModerateCard-aside ModerateCard-asideWithoutReplyTo"
      direction="column"
      itemGutter={true}
    >
      <Localized
        id="moderate-comment-decision"
      >
        <div
          className="ModerateCard-decision"
        >
          DECISION
        </div>
      </Localized>
      <ForwardRef(forwardRef)
        itemGutter={true}
      >
        <RejectButton
          invert={false}
          onClick={[Function]}
        />
        <AcceptButton
          invert={false}
          onClick={[Function]}
        />
      </ForwardRef(forwardRef)>
    </ForwardRef(forwardRef)>
  </ForwardRef(forwardRef)>
</withPropsOnChange(Card)>
`;
