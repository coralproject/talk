// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders configure moderation 1`] = `
<div
  className="MainLayout-root"
  data-testid="configure-container"
>
  <form
    autoComplete="off"
    id="configure-form"
    onSubmit={[Function]}
  >
    <div
      className="Box-root Flex-root Layout-root Flex-flex"
    >
      <div
        className="SideBar-root"
      >
        <div
          className="Box-root HorizontalGutter-root HorizontalGutter-double"
        >
          <nav
            className="Navigation-root"
          >
            <ul
              className="Navigation-ul"
            >
              <li>
                <a
                  className="Link-link"
                  href="/admin/configure/general"
                  onClick={[Function]}
                >
                  General
                </a>
              </li>
              <li>
                <a
                  className="Link-link"
                  href="/admin/configure/organization"
                  onClick={[Function]}
                >
                  Organization
                </a>
              </li>
              <li>
                <a
                  className="Link-link Link-linkActive"
                  href="/admin/configure/moderation"
                  onClick={[Function]}
                >
                  Moderation
                </a>
              </li>
              <li>
                <a
                  className="Link-link"
                  href="/admin/configure/wordList"
                  onClick={[Function]}
                >
                  Banned and Suspect Words
                </a>
              </li>
              <li>
                <a
                  className="Link-link"
                  href="/admin/configure/auth"
                  onClick={[Function]}
                >
                  Authentication
                </a>
              </li>
              <li>
                <a
                  className="Link-link"
                  href="/admin/configure/email"
                  onClick={[Function]}
                >
                  Email
                </a>
              </li>
              <li>
                <a
                  className="Link-link"
                  href="/admin/configure/advanced"
                  onClick={[Function]}
                >
                  Advanced
                </a>
              </li>
            </ul>
          </nav>
        </div>
        <div
          className="Box-root HorizontalGutter-root HorizontalGutter-double"
        >
          <button
            className="BaseButton-root Button-root Button-sizeRegular Button-colorSuccess Button-variantFilled Button-disabled"
            data-color="success"
            data-testid="configure-sideBar-saveChanges"
            data-variant="filled"
            disabled={true}
            onBlur={[Function]}
            onFocus={[Function]}
            onMouseOut={[Function]}
            onMouseOver={[Function]}
            onTouchEnd={[Function]}
            type="submit"
          >
            Save Changes
          </button>
        </div>
      </div>
      <div
        className="Main-root"
      >
        <div
          className="Box-root HorizontalGutter-root HorizontalGutter-double"
          data-testid="configure-moderationContainer"
        >
          <fieldset
            className="FieldSet-root Box-root HorizontalGutter-root HorizontalGutter-oneAndAHalf"
          >
            <legend
              className="Box-root Typography-root Typography-heading3 Typography-colorTextPrimary Header-root"
            >
              Pre-moderation
            </legend>
            <p
              className="Box-root Typography-root Typography-bodyCopy Typography-colorTextPrimary"
            >
              When pre-moderation is turned on, comments will not be published unless
approved by a moderator.
            </p>
            <fieldset
              className="FieldSet-root Box-root HorizontalGutter-root FormField-root HorizontalGutter-half"
            >
              <legend
                className="Box-root Typography-root Typography-inputLabel Typography-colorTextPrimary InputLabel-root"
              >
                Pre-moderate all comments sitewide
              </legend>
              <div>
                <div
                  className="Box-root Flex-root RadioButton-root Flex-flex Flex-alignCenter"
                >
                  <input
                    checked={false}
                    className="RadioButton-input"
                    disabled={false}
                    id="moderation-true"
                    name="moderation"
                    onBlur={[Function]}
                    onChange={[Function]}
                    onFocus={[Function]}
                    type="radio"
                    value={true}
                  />
                  <label
                    className="RadioButton-label"
                    htmlFor="moderation-true"
                  >
                    <span>
                      On
                    </span>
                  </label>
                </div>
                <div
                  className="Box-root Flex-root RadioButton-root Flex-flex Flex-alignCenter"
                >
                  <input
                    checked={true}
                    className="RadioButton-input"
                    disabled={false}
                    id="moderation-false"
                    name="moderation"
                    onBlur={[Function]}
                    onChange={[Function]}
                    onFocus={[Function]}
                    type="radio"
                    value={false}
                  />
                  <label
                    className="RadioButton-label"
                    htmlFor="moderation-false"
                  >
                    <span>
                      Off
                    </span>
                  </label>
                </div>
              </div>
            </fieldset>
            <fieldset
              className="FieldSet-root Box-root HorizontalGutter-root FormField-root HorizontalGutter-half"
            >
              <legend
                className="Box-root Typography-root Typography-inputLabel Typography-colorTextPrimary InputLabel-root"
              >
                Pre-moderate comments containing links sitewide
              </legend>
              <div>
                <div
                  className="Box-root Flex-root RadioButton-root Flex-flex Flex-alignCenter"
                >
                  <input
                    checked={false}
                    className="RadioButton-input"
                    disabled={false}
                    id="premodLinksEnable-true"
                    name="premodLinksEnable"
                    onBlur={[Function]}
                    onChange={[Function]}
                    onFocus={[Function]}
                    type="radio"
                    value={true}
                  />
                  <label
                    className="RadioButton-label"
                    htmlFor="premodLinksEnable-true"
                  >
                    <span>
                      On
                    </span>
                  </label>
                </div>
                <div
                  className="Box-root Flex-root RadioButton-root Flex-flex Flex-alignCenter"
                >
                  <input
                    checked={true}
                    className="RadioButton-input"
                    disabled={false}
                    id="premodLinksEnable-false"
                    name="premodLinksEnable"
                    onBlur={[Function]}
                    onChange={[Function]}
                    onFocus={[Function]}
                    type="radio"
                    value={false}
                  />
                  <label
                    className="RadioButton-label"
                    htmlFor="premodLinksEnable-false"
                  >
                    <span>
                      Off
                    </span>
                  </label>
                </div>
              </div>
            </fieldset>
          </fieldset>
          <fieldset
            className="FieldSet-root Box-root HorizontalGutter-root HorizontalGutter-oneAndAHalf"
          >
            <legend
              className="Box-root Typography-root Typography-heading3 Typography-colorTextPrimary Header-root"
            >
              Recent history
            </legend>
            <fieldset
              className="FieldSet-root Box-root HorizontalGutter-root FormField-root HorizontalGutter-half"
            >
              <legend
                className="Box-root Typography-root Typography-inputLabel Typography-colorTextPrimary InputLabel-root"
              >
                Recent comment history time period
              </legend>
              <p
                className="Box-root Typography-root Typography-detail Typography-colorTextSecondary"
              >
                The period of time over which a userâ€™s rejection rate is calculated.
              </p>
              <div
                className="Box-root Flex-root Flex-flex Flex-itemGutter gutter"
              >
                <div
                  className="TextField-root DurationField-value"
                >
                  <input
                    aria-label="value"
                    autoCapitalize="off"
                    autoComplete="off"
                    autoCorrect="off"
                    className="TextField-input TextField-colorRegular TextField-textAlignCenter"
                    disabled={false}
                    name="recentCommentHistory.timeFrame-value"
                    onChange={[Function]}
                    placeholder=""
                    spellCheck={false}
                    type="text"
                    value="7"
                  />
                </div>
                <p
                  className="Box-root Typography-root Typography-bodyCopy Typography-colorTextPrimary DurationField-unit"
                >
                  Days
                </p>
              </div>
            </fieldset>
            <fieldset
              className="FieldSet-root Box-root HorizontalGutter-root FormField-root HorizontalGutter-half"
            >
              <legend
                className="Box-root Typography-root Typography-inputLabel Typography-colorTextPrimary InputLabel-root"
              >
                Recent history filter
              </legend>
              <p
                className="Box-root Typography-root Typography-detail Typography-colorTextSecondary"
              >
                Prevents repeat offenders from publishing comments without approval.
After a commenter's rejection rate rises above the defined threshold
below, their next submitted comments are 
                <strong>
                  sent to Pending for
moderator approval.
                </strong>
                 The filter is removed when their rejection rate
falls below the threshold.
              </p>
              <div>
                <div
                  className="Box-root Flex-root RadioButton-root Flex-flex Flex-alignCenter"
                >
                  <input
                    checked={false}
                    className="RadioButton-input"
                    disabled={false}
                    id="recentCommentHistory.enabled-true"
                    name="recentCommentHistory.enabled"
                    onBlur={[Function]}
                    onChange={[Function]}
                    onFocus={[Function]}
                    type="radio"
                    value={true}
                  />
                  <label
                    className="RadioButton-label"
                    htmlFor="recentCommentHistory.enabled-true"
                  >
                    <span>
                      On
                    </span>
                  </label>
                </div>
                <div
                  className="Box-root Flex-root RadioButton-root Flex-flex Flex-alignCenter"
                >
                  <input
                    checked={true}
                    className="RadioButton-input"
                    disabled={false}
                    id="recentCommentHistory.enabled-false"
                    name="recentCommentHistory.enabled"
                    onBlur={[Function]}
                    onChange={[Function]}
                    onFocus={[Function]}
                    type="radio"
                    value={false}
                  />
                  <label
                    className="RadioButton-label"
                    htmlFor="recentCommentHistory.enabled-false"
                  >
                    <span>
                      Off
                    </span>
                  </label>
                </div>
              </div>
            </fieldset>
            <div
              className="Box-root HorizontalGutter-root FormField-root HorizontalGutter-half"
            >
              <label
                className="Box-root Typography-root Typography-inputLabel Typography-colorTextPrimary InputLabel-root"
              >
                Rejection rate threshold
              </label>
              <p
                className="Box-root Typography-root Typography-detail Typography-colorTextSecondary"
              >
                A userâ€™s rejected comments divided by their published comments, over
the time period set below (does not include comments pending for
toxicity, spam or pre-moderation.)
              </p>
              <div
                className="TextField-root"
              >
                <input
                  autoCapitalize="off"
                  autoComplete="off"
                  autoCorrect="off"
                  className="TextField-input RecentCommentHistoryConfig-thresholdTextField TextField-colorRegular TextField-textAlignCenter"
                  disabled={false}
                  name="recentCommentHistory.triggerRejectionRate"
                  onBlur={[Function]}
                  onChange={[Function]}
                  onFocus={[Function]}
                  placeholder=""
                  spellCheck={false}
                  type="text"
                  value="30"
                />
                <div
                  className="TextField-adornment"
                >
                  <p
                    className="Box-root Typography-root Typography-bodyCopy Typography-colorTextPrimary"
                  >
                    %
                  </p>
                </div>
              </div>
            </div>
          </fieldset>
          <fieldset
            className="FieldSet-root Box-root HorizontalGutter-root HorizontalGutter-oneAndAHalf"
          >
            <legend
              className="Box-root Typography-root Typography-heading3 Typography-colorTextPrimary Header-root"
            >
              Perspective toxic comment filter
            </legend>
            <p
              className="Box-root Typography-root Typography-bodyCopy Typography-colorTextPrimary"
            >
              Using the Perspective API, the Toxic Comment filter warns users when comments exceed the predefined toxicity
threshold. Comments with a toxicity score above the threshold 
              <strong>
                will not be published
              </strong>
               and are placed in
the 
              <strong>
                Pending Queue for review by a moderator
              </strong>
              . If approved by a moderator, the comment will be published.
            </p>
            <fieldset
              className="FieldSet-root Box-root HorizontalGutter-root FormField-root HorizontalGutter-half"
            >
              <legend
                className="Box-root Typography-root Typography-inputLabel Typography-colorTextPrimary InputLabel-root"
              >
                Toxic comment filter
              </legend>
              <div>
                <div
                  className="Box-root Flex-root RadioButton-root Flex-flex Flex-alignCenter"
                >
                  <input
                    checked={false}
                    className="RadioButton-input"
                    disabled={false}
                    id="integrations.perspective.enabled-true"
                    name="integrations.perspective.enabled"
                    onBlur={[Function]}
                    onChange={[Function]}
                    onFocus={[Function]}
                    type="radio"
                    value={true}
                  />
                  <label
                    className="RadioButton-label"
                    htmlFor="integrations.perspective.enabled-true"
                  >
                    <span>
                      On
                    </span>
                  </label>
                </div>
                <div
                  className="Box-root Flex-root RadioButton-root Flex-flex Flex-alignCenter"
                >
                  <input
                    checked={true}
                    className="RadioButton-input"
                    disabled={false}
                    id="integrations.perspective.enabled-false"
                    name="integrations.perspective.enabled"
                    onBlur={[Function]}
                    onChange={[Function]}
                    onFocus={[Function]}
                    type="radio"
                    value={false}
                  />
                  <label
                    className="RadioButton-label"
                    htmlFor="integrations.perspective.enabled-false"
                  >
                    <span>
                      Off
                    </span>
                  </label>
                </div>
              </div>
            </fieldset>
            <div
              className="Box-root HorizontalGutter-root FormField-root HorizontalGutter-half"
            >
              <label
                className="Box-root Typography-root Typography-inputLabel Typography-colorTextPrimary InputLabel-root"
                htmlFor="configure-moderation-perspective-threshold"
              >
                Toxicity threshold
              </label>
              <p
                className="Box-root Typography-root Typography-detail Typography-colorTextSecondary"
              >
                This value can be set a percentage between 0 and 100. This number represents the likelihood that a
comment is toxic, according to Perspective API. By default the threshold is set to 80%.
              </p>
              <div
                className="TextField-root"
              >
                <input
                  autoCapitalize="off"
                  autoComplete="off"
                  autoCorrect="off"
                  className="TextField-input PerspectiveConfig-thresholdTextField TextField-colorRegular TextField-textAlignCenter"
                  disabled={false}
                  id="configure-moderation-perspective-threshold"
                  name="integrations.perspective.threshold"
                  onBlur={[Function]}
                  onChange={[Function]}
                  onFocus={[Function]}
                  placeholder="80"
                  spellCheck={false}
                  type="text"
                  value="80"
                />
                <div
                  className="TextField-adornment"
                >
                  <p
                    className="Box-root Typography-root Typography-bodyCopy Typography-colorTextPrimary"
                  >
                    %
                  </p>
                </div>
              </div>
            </div>
            <div
              className="Box-root HorizontalGutter-root FormField-root HorizontalGutter-half"
            >
              <label
                className="Box-root Typography-root Typography-inputLabel Typography-colorTextPrimary InputLabel-root"
                htmlFor="configure-moderation-perspective-model"
              >
                Toxicity model
              </label>
              <p
                className="Box-root Typography-root Typography-detail Typography-colorTextSecondary"
              >
                Choose your Perspective Model. The default is TOXICITY. You can find out more about model choices 
                <a
                  className="ExternalLink-root"
                  href="https://github.com/conversationai/perspectiveapi/blob/master/api_reference.md#models"
                  rel="noopener noreferrer"
                  target="_blank"
                >
                  here
                </a>
                .
              </p>
              <div
                className="TextField-root"
              >
                <input
                  autoCapitalize="off"
                  autoComplete="off"
                  autoCorrect="off"
                  className="TextField-input TextField-colorRegular"
                  disabled={false}
                  id="configure-moderation-perspective-model"
                  name="integrations.perspective.model"
                  onBlur={[Function]}
                  onChange={[Function]}
                  onFocus={[Function]}
                  placeholder="TOXICITY"
                  spellCheck={false}
                  type="text"
                  value=""
                />
              </div>
            </div>
            <fieldset
              className="FieldSet-root Box-root HorizontalGutter-root FormField-root HorizontalGutter-half"
            >
              <legend
                className="Box-root Typography-root Typography-inputLabel Typography-colorTextPrimary InputLabel-root"
              >
                Allow Google to store comment data
              </legend>
              <p
                className="Box-root Typography-root Typography-detail Typography-colorTextSecondary"
              >
                Stored comments will be used for future research and community model building purposes to
improve the API over time.
              </p>
              <div>
                <div>
                  <div
                    className="Box-root Flex-root RadioButton-root Flex-flex Flex-alignCenter"
                  >
                    <input
                      checked={false}
                      className="RadioButton-input"
                      disabled={false}
                      id="integrations.perspective.doNotStore-allow"
                      name="integrations.perspective.doNotStore"
                      onBlur={[Function]}
                      onChange={[Function]}
                      onFocus={[Function]}
                      type="radio"
                      value={false}
                    />
                    <label
                      className="RadioButton-label"
                      htmlFor="integrations.perspective.doNotStore-allow"
                    >
                      Allow
                    </label>
                  </div>
                  <div
                    className="Box-root Flex-root RadioButton-root Flex-flex Flex-alignCenter"
                  >
                    <input
                      checked={false}
                      className="RadioButton-input"
                      disabled={false}
                      id="integrations.perspective.doNotStore-dontAllow"
                      name="integrations.perspective.doNotStore"
                      onBlur={[Function]}
                      onChange={[Function]}
                      onFocus={[Function]}
                      type="radio"
                      value={true}
                    />
                    <label
                      className="RadioButton-label"
                      htmlFor="integrations.perspective.doNotStore-dontAllow"
                    >
                      Don't allow
                    </label>
                  </div>
                </div>
              </div>
            </fieldset>
            <div>
              <h1
                className="Box-root Typography-root Typography-heading3 Typography-colorTextPrimary Subheader-root"
              >
                Configuration
              </h1>
              <p
                className="Box-root Typography-root Typography-detail Typography-colorTextPrimary"
              >
                For additional information on how to set up the Perspective Toxic Comment Filter please visit:

                <a
                  className="ExternalLink-root"
                  href="https://github.com/conversationai/perspectiveapi/blob/master/quickstart.md"
                  rel="noopener noreferrer"
                  target="_blank"
                >
                  https://github.com/conversationai/perspectiveapi/blob/master/quickstart.md
                </a>
              </p>
            </div>
            <div
              className="Box-root HorizontalGutter-root FormField-root HorizontalGutter-half"
            >
              <label
                className="Box-root Typography-root Typography-inputLabel Typography-colorTextPrimary InputLabel-root"
                htmlFor="configure-moderation-integrations.perspective.key"
              >
                API key
              </label>
              <div
                className="PasswordField-root"
              >
                <div
                  className="PasswordField-wrapper"
                >
                  <input
                    autoCapitalize="off"
                    autoComplete="off"
                    autoCorrect="off"
                    className="PasswordField-colorRegular PasswordField-input"
                    disabled={false}
                    id="configure-moderation-integrations.perspective.key"
                    name="integrations.perspective.key"
                    onBlur={[Function]}
                    onChange={[Function]}
                    onFocus={[Function]}
                    placeholder=""
                    spellCheck={false}
                    type="password"
                    value=""
                  />
                  <div
                    className="PasswordField-icon"
                    onClick={[Function]}
                    role="button"
                    tabIndex={0}
                    title="Hide API Key"
                  >
                    <i
                      aria-hidden="true"
                      className="Icon-root Icon-sm"
                    >
                      visibility
                    </i>
                  </div>
                </div>
              </div>
            </div>
            <div
              className="Box-root HorizontalGutter-root FormField-root HorizontalGutter-half"
            >
              <label
                className="Box-root Typography-root Typography-inputLabel Typography-colorTextPrimary InputLabel-root"
                htmlFor="configure-moderation-perspective-customEndpoint"
              >
                Custom endpoint
              </label>
              <p
                className="Box-root Typography-root Typography-detail Typography-colorTextSecondary"
              >
                By default the endpoint is set to https://commentanalyzer.googleapis.com/v1alpha1. You may override this here.
              </p>
              <div
                className="TextField-root"
              >
                <input
                  autoCapitalize="off"
                  autoComplete="off"
                  autoCorrect="off"
                  className="TextField-input TextField-colorRegular"
                  disabled={false}
                  id="configure-moderation-perspective-customEndpoint"
                  name="integrations.perspective.endpoint"
                  onBlur={[Function]}
                  onChange={[Function]}
                  onFocus={[Function]}
                  placeholder="https://commentanalyzer.googleapis.com/v1alpha1"
                  spellCheck={false}
                  type="text"
                  value=""
                />
              </div>
            </div>
          </fieldset>
          <fieldset
            className="FieldSet-root Box-root HorizontalGutter-root HorizontalGutter-oneAndAHalf"
          >
            <legend
              className="Box-root Typography-root Typography-heading3 Typography-colorTextPrimary Header-root"
            >
              Akismet spam detection filter
            </legend>
            <p
              className="Box-root Typography-root Typography-bodyCopy Typography-colorTextPrimary"
            >
              Submitted comments are passed to the Akismet API for spam detection.
If a comment is determined to be spam, it will prompt the user,
indicating that the comment might be considered spam.
If the user continues after this point with the still spam-like comment,
the comment will be marked as containing spam, 
              <strong>
                will not be published
              </strong>
               and
are placed in the 
              <strong>
                Pending Queue for review by a moderator
              </strong>
              . If approved by a moderator,
the comment will be published.
            </p>
            <fieldset
              className="FieldSet-root Box-root HorizontalGutter-root FormField-root HorizontalGutter-half"
            >
              <legend
                className="Box-root Typography-root Typography-inputLabel Typography-colorTextPrimary InputLabel-root"
              >
                Spam detection filter
              </legend>
              <div>
                <div
                  className="Box-root Flex-root RadioButton-root Flex-flex Flex-alignCenter"
                >
                  <input
                    checked={false}
                    className="RadioButton-input"
                    disabled={false}
                    id="integrations.akismet.enabled-true"
                    name="integrations.akismet.enabled"
                    onBlur={[Function]}
                    onChange={[Function]}
                    onFocus={[Function]}
                    type="radio"
                    value={true}
                  />
                  <label
                    className="RadioButton-label"
                    htmlFor="integrations.akismet.enabled-true"
                  >
                    <span>
                      On
                    </span>
                  </label>
                </div>
                <div
                  className="Box-root Flex-root RadioButton-root Flex-flex Flex-alignCenter"
                >
                  <input
                    checked={true}
                    className="RadioButton-input"
                    disabled={false}
                    id="integrations.akismet.enabled-false"
                    name="integrations.akismet.enabled"
                    onBlur={[Function]}
                    onChange={[Function]}
                    onFocus={[Function]}
                    type="radio"
                    value={false}
                  />
                  <label
                    className="RadioButton-label"
                    htmlFor="integrations.akismet.enabled-false"
                  >
                    <span>
                      Off
                    </span>
                  </label>
                </div>
              </div>
            </fieldset>
            <div>
              <h1
                className="Box-root Typography-root Typography-heading3 Typography-colorTextPrimary Subheader-root"
              >
                Configuration
              </h1>
              <p
                className="Box-root Typography-root Typography-detail Typography-colorTextPrimary"
              >
                Note: You must add your active domain(s)
in your Akismet account: 
                <a
                  className="ExternalLink-root"
                  href="https://akismet.com/account/"
                  rel="noopener noreferrer"
                  target="_blank"
                >
                  https://akismet.com/account/
                </a>
              </p>
            </div>
            <div
              className="Box-root HorizontalGutter-root FormField-root HorizontalGutter-half"
            >
              <label
                className="Box-root Typography-root Typography-inputLabel Typography-colorTextPrimary InputLabel-root"
                htmlFor="configure-moderation-integrations.akismet.key"
              >
                API key
              </label>
              <div
                className="PasswordField-root"
              >
                <div
                  className="PasswordField-wrapper"
                >
                  <input
                    autoCapitalize="off"
                    autoComplete="off"
                    autoCorrect="off"
                    className="PasswordField-colorRegular PasswordField-input"
                    disabled={false}
                    id="configure-moderation-integrations.akismet.key"
                    name="integrations.akismet.key"
                    onBlur={[Function]}
                    onChange={[Function]}
                    onFocus={[Function]}
                    placeholder=""
                    spellCheck={false}
                    type="password"
                    value=""
                  />
                  <div
                    className="PasswordField-icon"
                    onClick={[Function]}
                    role="button"
                    tabIndex={0}
                    title="Hide API Key"
                  >
                    <i
                      aria-hidden="true"
                      className="Icon-root Icon-sm"
                    >
                      visibility
                    </i>
                  </div>
                </div>
              </div>
            </div>
            <div
              className="Box-root HorizontalGutter-root FormField-root HorizontalGutter-half"
            >
              <label
                className="Box-root Typography-root Typography-inputLabel Typography-colorTextPrimary InputLabel-root"
                htmlFor="configure-moderation-akismet-site"
              >
                Site URL
              </label>
              <div
                className="TextField-root"
              >
                <input
                  autoCapitalize="off"
                  autoComplete="off"
                  autoCorrect="off"
                  className="TextField-input TextField-colorRegular"
                  disabled={false}
                  id="configure-moderation-akismet-site"
                  name="integrations.akismet.site"
                  onBlur={[Function]}
                  onChange={[Function]}
                  onFocus={[Function]}
                  placeholder=""
                  spellCheck={false}
                  type="text"
                  value=""
                />
              </div>
            </div>
          </fieldset>
        </div>
      </div>
    </div>
  </form>
</div>
`;
