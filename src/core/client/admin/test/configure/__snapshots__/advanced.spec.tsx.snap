// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders configure advanced 1`] = `
<div
  className="MainLayout-root"
  data-testid="configure-container"
>
  <form
    autoComplete="off"
    id="configure-form"
    onSubmit={[Function]}
  >
    <div
      className="Box-root Flex-root Layout-root Flex-flex"
    >
      <div
        className="SideBar-root"
      >
        <div
          className="Box-root HorizontalGutter-root HorizontalGutter-double"
        >
          <nav
            className="Navigation-root"
          >
            <ul
              className="Navigation-ul"
            >
              <li>
                <a
                  className="Link-link"
                  href="/admin/configure/general"
                  onClick={[Function]}
                >
                  General
                </a>
              </li>
              <li>
                <a
                  className="Link-link"
                  href="/admin/configure/organization"
                  onClick={[Function]}
                >
                  Organization
                </a>
              </li>
              <li>
                <a
                  className="Link-link"
                  href="/admin/configure/moderation"
                  onClick={[Function]}
                >
                  Moderation
                </a>
              </li>
              <li>
                <a
                  className="Link-link"
                  href="/admin/configure/wordList"
                  onClick={[Function]}
                >
                  Banned and Suspect Words
                </a>
              </li>
              <li>
                <a
                  className="Link-link"
                  href="/admin/configure/auth"
                  onClick={[Function]}
                >
                  Authentication
                </a>
              </li>
              <li>
                <a
                  className="Link-link"
                  href="/admin/configure/email"
                  onClick={[Function]}
                >
                  Email
                </a>
              </li>
              <li>
                <a
                  className="Link-link Link-linkActive"
                  href="/admin/configure/advanced"
                  onClick={[Function]}
                >
                  Advanced
                </a>
              </li>
            </ul>
          </nav>
        </div>
        <div
          className="Box-root HorizontalGutter-root HorizontalGutter-double"
        >
          <button
            className="BaseButton-root Button-root Button-sizeRegular Button-colorSuccess Button-variantFilled Button-disabled"
            data-color="success"
            data-testid="configure-sideBar-saveChanges"
            data-variant="filled"
            disabled={true}
            onBlur={[Function]}
            onFocus={[Function]}
            onMouseOut={[Function]}
            onMouseOver={[Function]}
            onTouchEnd={[Function]}
            type="submit"
          >
            Save Changes
          </button>
        </div>
      </div>
      <div
        className="Main-root"
      >
        <div
          className="Box-root HorizontalGutter-root HorizontalGutter-double"
          data-testid="configure-advancedContainer"
        >
          <fieldset
            className="Box-root HorizontalGutter-root HorizontalGutter-oneAndAHalf"
          >
            <legend
              className="Box-root Typography-root Typography-heading3 Typography-colorTextPrimary Header-root"
            >
              Embed code
            </legend>
            <div
              className="Box-root HorizontalGutter-root SectionContent-sectionContent HorizontalGutter-double"
            >
              <p
                className="Box-root Typography-root Typography-bodyShort Typography-colorTextPrimary"
              >
                Copy and paste the code below into your CMS to embed Coral comment streams in
each of your siteâ€™s stories.
              </p>
              <textarea
                className="EmbedCode-textArea"
                readOnly={true}
                rows={24}
                value="<div id=\\"coral_thread\\"></div>
<script type=\\"text/javascript\\">
  (function() {
      var d = document, s = d.createElement('script');
      s.src = 'http://localhost/assets/js/embed.js';
      s.async = false;
      s.defer = true;
      s.onload = function() {
          Coral.createStreamEmbed({
              id: \\"coral_thread\\",
              autoRender: true,
              rootURL: 'http://localhost',
              // Uncomment these lines and replace with the ID of the
              // story's ID and URL from your CMS to provide the
              // tightest integration. Refer to our documentation at
              // https://docs.coralproject.net for all the configuration
              // options.
              // storyID: '\${storyID}',
              // storyURL: '\${storyURL}',
          });
      };
      (d.head || d.body).appendChild(s);
  })();
</script>"
              />
              <div
                className="Box-root HorizontalGutter-root EmbedCode-copyArea HorizontalGutter-full"
              >
                <button
                  className="BaseButton-root Button-root Button-sizeRegular Button-colorPrimary Button-variantFilled"
                  data-color="primary"
                  data-variant="filled"
                  onBlur={[Function]}
                  onClick={[Function]}
                  onFocus={[Function]}
                  onMouseOut={[Function]}
                  onMouseOver={[Function]}
                  onTouchEnd={[Function]}
                  type="button"
                >
                  <span>
                    Copy
                  </span>
                </button>
              </div>
            </div>
          </fieldset>
          <div
            className="Box-root HorizontalGutter-root FormField-root HorizontalGutter-half"
          >
            <div
              className="Box-root HorizontalGutter-root HorizontalGutter-full"
            >
              <label
                className="Box-root Typography-root Typography-heading3 Typography-colorTextPrimary Header-root"
                htmlFor="configure-advanced-customCSSURL"
              >
                Custom CSS
              </label>
              <div
                className="Box-root HorizontalGutter-root SectionContent-sectionContent HorizontalGutter-double"
              >
                <p
                  className="Box-root Typography-root Typography-bodyShort Typography-colorTextPrimary"
                >
                  URL of a CSS stylesheet that will override default Embed Stream styles. Can be internal or external.
                </p>
                <div
                  className="TextField-root TextField-fullWidth"
                >
                  <input
                    autoCapitalize="off"
                    autoComplete="off"
                    autoCorrect="off"
                    className="TextField-input TextField-colorRegular"
                    disabled={false}
                    id="configure-advanced-customCSSURL"
                    name="customCSSURL"
                    onBlur={[Function]}
                    onChange={[Function]}
                    onFocus={[Function]}
                    placeholder=""
                    spellCheck={false}
                    type="text"
                    value=""
                  />
                </div>
              </div>
            </div>
          </div>
          <div
            className="Box-root HorizontalGutter-root FormField-root HorizontalGutter-half"
          >
            <div
              className="Box-root HorizontalGutter-root HorizontalGutter-full"
            >
              <label
                className="Box-root Typography-root Typography-heading3 Typography-colorTextPrimary Header-root"
                htmlFor="configure-advanced-liveUpdates"
              >
                Comment stream live updates
              </label>
              <div
                className="Box-root HorizontalGutter-root SectionContent-sectionContent HorizontalGutter-double"
              >
                <p
                  className="Box-root Typography-root Typography-bodyShort Typography-colorTextPrimary"
                >
                  When enabled, there will be real-time loading and updating of comments.
When disabled, users will have to refresh the page to see new comments.
                </p>
                <div>
                  <div
                    className="Box-root Flex-root RadioButton-root Flex-flex Flex-alignCenter"
                  >
                    <input
                      checked={true}
                      className="RadioButton-input"
                      disabled={false}
                      id="live.enabled-true"
                      name="live.enabled"
                      onBlur={[Function]}
                      onChange={[Function]}
                      onFocus={[Function]}
                      type="radio"
                      value={true}
                    />
                    <label
                      className="RadioButton-label"
                      htmlFor="live.enabled-true"
                    >
                      <span>
                        On
                      </span>
                    </label>
                  </div>
                  <div
                    className="Box-root Flex-root RadioButton-root Flex-flex Flex-alignCenter"
                  >
                    <input
                      checked={false}
                      className="RadioButton-input"
                      disabled={false}
                      id="live.enabled-false"
                      name="live.enabled"
                      onBlur={[Function]}
                      onChange={[Function]}
                      onFocus={[Function]}
                      type="radio"
                      value={false}
                    />
                    <label
                      className="RadioButton-label"
                      htmlFor="live.enabled-false"
                    >
                      <span>
                        Off
                      </span>
                    </label>
                  </div>
                </div>
              </div>
            </div>
          </div>
          <div
            className="Box-root HorizontalGutter-root FormField-root HorizontalGutter-half"
          >
            <div
              className="Box-root HorizontalGutter-root HorizontalGutter-full"
            >
              <label
                className="Box-root Typography-root Typography-heading3 Typography-colorTextPrimary Header-root"
                htmlFor="configure-advanced-allowedDomains"
              >
                Permitted domains
              </label>
              <div
                className="Box-root HorizontalGutter-root SectionContent-sectionContent HorizontalGutter-double"
              >
                <p
                  className="Box-root Typography-root Typography-bodyShort Typography-colorTextPrimary"
                >
                  Domains where your Coral instance is allowed to be embedded
including the scheme (ex. http://localhost:3000, https://staging.domain.com,
https://domain.com).
                </p>
                <div
                  className="TextField-root TextField-fullWidth"
                >
                  <input
                    autoCapitalize="off"
                    autoComplete="off"
                    autoCorrect="off"
                    className="TextField-input TextField-colorRegular"
                    disabled={false}
                    id="configure-advanced-allowedDomains"
                    name="allowedDomains"
                    onBlur={[Function]}
                    onChange={[Function]}
                    onFocus={[Function]}
                    placeholder=""
                    spellCheck={false}
                    type="text"
                    value="http://localhost:8080"
                  />
                </div>
              </div>
            </div>
          </div>
          <div
            className="Box-root HorizontalGutter-root HorizontalGutter-double"
          >
            <div
              className="Box-root HorizontalGutter-root HorizontalGutter-full"
            >
              <h1
                className="Box-root Typography-root Typography-heading3 Typography-colorTextPrimary Header-root"
              >
                Story creation
              </h1>
              <p
                className="Box-root Typography-root Typography-detail Typography-colorTextPrimary"
              >
                Advanced settings for how stories are created within Coral.
              </p>
            </div>
            <div
              className="Box-root HorizontalGutter-root HorizontalGutter-double"
            >
              <div
                className="Box-root HorizontalGutter-root FormField-root HorizontalGutter-half"
              >
                <div
                  className="Box-root HorizontalGutter-root HorizontalGutter-full"
                >
                  <label
                    className="Box-root Typography-root Typography-inputLabel Typography-colorTextPrimary InputLabel-root"
                  >
                    Lazy story creation
                  </label>
                  <p
                    className="Box-root Typography-root Typography-detail Typography-colorTextPrimary"
                  >
                    Enable stories to be automatically created when they are published from your CMS.
                  </p>
                  <div>
                    <div
                      className="Box-root Flex-root RadioButton-root Flex-flex Flex-alignCenter"
                    >
                      <input
                        checked={true}
                        className="RadioButton-input"
                        disabled={false}
                        id="stories.disableLazy-true"
                        name="stories.disableLazy"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        type="radio"
                        value={false}
                      />
                      <label
                        className="RadioButton-label"
                        htmlFor="stories.disableLazy-true"
                      >
                        <span>
                          On
                        </span>
                      </label>
                    </div>
                    <div
                      className="Box-root Flex-root RadioButton-root Flex-flex Flex-alignCenter"
                    >
                      <input
                        checked={false}
                        className="RadioButton-input"
                        disabled={false}
                        id="stories.disableLazy-false"
                        name="stories.disableLazy"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        type="radio"
                        value={true}
                      />
                      <label
                        className="RadioButton-label"
                        htmlFor="stories.disableLazy-false"
                      >
                        <span>
                          Off
                        </span>
                      </label>
                    </div>
                  </div>
                </div>
              </div>
              <div
                className="Box-root HorizontalGutter-root FormField-root HorizontalGutter-half"
              >
                <div
                  className="Box-root HorizontalGutter-root HorizontalGutter-full"
                >
                  <label
                    className="Box-root Typography-root Typography-inputLabel Typography-colorTextPrimary InputLabel-root"
                  >
                    Story scraping
                  </label>
                  <p
                    className="Box-root Typography-root Typography-detail Typography-colorTextPrimary"
                  >
                    Enable story metadata to be automatically scraped when they are published from your CMS.
                  </p>
                  <div>
                    <div
                      className="Box-root Flex-root RadioButton-root Flex-flex Flex-alignCenter"
                    >
                      <input
                        checked={true}
                        className="RadioButton-input"
                        disabled={false}
                        id="stories.scraping.enabled-true"
                        name="stories.scraping.enabled"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        type="radio"
                        value={true}
                      />
                      <label
                        className="RadioButton-label"
                        htmlFor="stories.scraping.enabled-true"
                      >
                        <span>
                          On
                        </span>
                      </label>
                    </div>
                    <div
                      className="Box-root Flex-root RadioButton-root Flex-flex Flex-alignCenter"
                    >
                      <input
                        checked={false}
                        className="RadioButton-input"
                        disabled={false}
                        id="stories.scraping.enabled-false"
                        name="stories.scraping.enabled"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        type="radio"
                        value={false}
                      />
                      <label
                        className="RadioButton-label"
                        htmlFor="stories.scraping.enabled-false"
                      >
                        <span>
                          Off
                        </span>
                      </label>
                    </div>
                  </div>
                </div>
              </div>
              <div
                className="Box-root HorizontalGutter-root FormField-root HorizontalGutter-half"
              >
                <div
                  className="Box-root HorizontalGutter-root HorizontalGutter-full"
                >
                  <label
                    className="Box-root Typography-root Typography-inputLabel Typography-colorTextPrimary InputLabel-root"
                    htmlFor="configure-advanced-stories-proxy-url"
                  >
                    Scraper proxy url
                  </label>
                  <p
                    className="Box-root Typography-root Typography-detail Typography-colorTextPrimary"
                  >
                    When specified, allows scraping requests to use the provided
proxy. All requests will then be passed through the appropriote
proxy as parsed by the 
                    <a
                      className="ExternalLink-root"
                      href="https://www.npmjs.com/package/proxy-agent"
                      rel="noopener noreferrer"
                      target="_blank"
                    >
                      npm proxy-agent
                    </a>
                     package.
                  </p>
                  <div
                    className="TextField-root"
                  >
                    <input
                      autoCapitalize="off"
                      autoComplete="off"
                      autoCorrect="off"
                      className="TextField-input TextField-colorRegular"
                      disabled={false}
                      id="configure-advanced-stories-proxy-url"
                      name="stories.scraping.proxyURL"
                      onBlur={[Function]}
                      onChange={[Function]}
                      onFocus={[Function]}
                      placeholder=""
                      spellCheck={false}
                      type="text"
                      value=""
                    />
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </form>
</div>
`;
